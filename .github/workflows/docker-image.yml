name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
# Primer paso. toma todo el codigo de mi repositorio para que lo revise
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
# Paso especial, Usando la imagen semantic version, para versionar automaticamente las imagenes                   
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version


        
# Segundo paso, probar mi autenticaci√≥n con dockerhub
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "Iniciando Login"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        echo "Fin del Login"
        
#Tercer paso, construir la imagen
    - name: Build Docker Image
      env:
        # Creando variable de entorno para usar el versionador
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
         docker build -t focusroot/docker-graphql:$NEW_VERSION .
         docker build -t focusroot/docker-graphql:latest .
         
#Cuarto paso, hacer push de la imagen es decir subir la imagen a dockerhub
    - name: Push Docker Image
      env:
        # Creando variable de entorno para usar el versionador
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
         docker push focusroot/docker-graphql:$NEW_VERSION
         docker push focusroot/docker-graphql:latest



    
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
